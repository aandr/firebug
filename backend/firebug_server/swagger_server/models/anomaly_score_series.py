# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AnomalyScoreSeries(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, anomalyscorelist: List[float]=None):  # noqa: E501
        """AnomalyScoreSeries - a model defined in Swagger

        :param anomalyscorelist: The anomalyscorelist of this AnomalyScoreSeries.  # noqa: E501
        :type anomalyscorelist: List[float]
        """
        self.swagger_types = {
            'anomalyscorelist': List[float]
        }

        self.attribute_map = {
            'anomalyscorelist': 'anomalyscorelist'
        }

        self._anomalyscorelist = anomalyscorelist

    @classmethod
    def from_dict(cls, dikt) -> 'AnomalyScoreSeries':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnomalyScoreSeries of this AnomalyScoreSeries.  # noqa: E501
        :rtype: AnomalyScoreSeries
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anomalyscorelist(self) -> List[float]:
        """Gets the anomalyscorelist of this AnomalyScoreSeries.


        :return: The anomalyscorelist of this AnomalyScoreSeries.
        :rtype: List[float]
        """
        return self._anomalyscorelist

    @anomalyscorelist.setter
    def anomalyscorelist(self, anomalyscorelist: List[float]):
        """Sets the anomalyscorelist of this AnomalyScoreSeries.


        :param anomalyscorelist: The anomalyscorelist of this AnomalyScoreSeries.
        :type anomalyscorelist: List[float]
        """
        if anomalyscorelist is None:
            raise ValueError("Invalid value for `anomalyscorelist`, must not be `None`")  # noqa: E501

        self._anomalyscorelist = anomalyscorelist
